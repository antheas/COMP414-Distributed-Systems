
version: '3.2'
services:
  # Authentication
  auth:
    build: 
      context: './auth/auth-php/'
      dockerfile: Dockerfile.prod
    ports:
      - "80"
    secrets:
      - mysql_password
    environment: 
      DB_HOST: "auth-db"
      DB_NAME: "${MYSQL_NAME}"
      DB_USERNAME: "${MYSQL_USERNAME}"
      DB_PASSWORD_FILE: /run/secrets/mysql_password
      AUTH_ISSUER: "${AUTH_ISSUER}"
      AUTH_PUBLIC: "${AUTH_PUBLIC}"
      AUTH_PRIVATE: "${AUTH_PRIVATE}"
    depends_on: 
      - auth-db

  # Authentication database
  auth-db:
    build:
      context: './auth/auth-db/'
      dockerfile: Dockerfile.prod
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
    ports:
      - "3306"
    secrets:
      - mysql_root_password
      - mysql_password
    restart: always
    volumes:
      - auth-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_DATABASE: "${MYSQL_NAME}"
      MYSQL_USER: "${MYSQL_USERNAME}"
      MYSQL_INITDB_SKIP_TZINFO: "yes"

  # API
  api:
    restart: always
    ports:
      - "3000"
    build:
      context: './api/node/'
      dockerfile: Dockerfile.prod
    environment: 
      JWT_PUBLIC_KEY: "${AUTH_PUBLIC}"
      MONGODB_USER: '${MONGODB_API_USER}'
      MONGODB_DATABASE: '${MONGODB_API_DB}'
      MONGODB_REPLICA_SET_NAME: '${MONGODB_REPLICA_SET_NAME}'
      MONGODB_REPLICA_SET_MEMBERS: '${MONGODB_REPLICA_SET_MEMBERS}'
      PLAYMASTER_IP_PREFIX: '172.21.0.'
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - zookeeper
    secrets:
      - mongodb_api_password

  # Mongodb replica set for api
  mongodb-primary:
    build:
      context: './api/mongo/'
      dockerfile: Dockerfile.prod
    ports:
      - "27017"
    restart: always
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb-primary
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_ROOT_PASSWORD: '${MONGODB_ROOT_PASSWORD}'
      MONGODB_REPLICA_SET_KEY: '${MONGODB_REPLICA_SET_KEY}'
      MONGODB_REPLICA_SET_NAME: '${MONGODB_REPLICA_SET_NAME}'
      MONGODB_API_USER: '${MONGODB_API_USER}'
      MONGODB_API_DB: '${MONGODB_API_DB}'
      MONGODB_PLAYMASTER_USER: '${MONGODB_PLAYMASTER_USER}'
      MONGODB_PLAYMASTER_DB: '${MONGODB_PLAYMASTER_DB}'
    secrets:
      - mongodb_config
    volumes:
     - 'master-data:/bitnami'

  mongodb-secondary:
    image: 'bitnami/mongodb:latest'
    ports:
      - "27017"
    depends_on:
      - mongodb-primary
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb-secondary
      MONGODB_REPLICA_SET_MODE: secondary
      MONGODB_PRIMARY_HOST: mongodb-primary
      MONGODB_PRIMARY_ROOT_PASSWORD: '${MONGODB_ROOT_PASSWORD}'
      MONGODB_REPLICA_SET_KEY: '${MONGODB_REPLICA_SET_KEY}'
      MONGODB_REPLICA_SET_NAME: '${MONGODB_REPLICA_SET_NAME}'

  mongodb-arbiter:
    image: 'bitnami/mongodb:latest'
    ports:
      - "27017"
    depends_on:
      - mongodb-primary
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb-arbiter
      MONGODB_REPLICA_SET_MODE: arbiter
      MONGODB_PRIMARY_HOST: mongodb-primary
      MONGODB_PRIMARY_ROOT_PASSWORD: '${MONGODB_ROOT_PASSWORD}'
      MONGODB_REPLICA_SET_KEY: '${MONGODB_REPLICA_SET_KEY}'
      MONGODB_REPLICA_SET_NAME: '${MONGODB_REPLICA_SET_NAME}'

  # Others
  zookeeper:
    build:
      context: './zookeeper'
      dockerfile: Dockerfile.prod
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  # Playmaster
  game:
    build:
      context: './game/'
      dockerfile: Dockerfile.prod
    ports:
      - "3000"
    environment:
      JWT_PUBLIC_KEY: "${AUTH_PUBLIC}"
      MONGODB_USER: '${MONGODB_PLAYMASTER_USER}'
      MONGODB_DATABASE: '${MONGODB_PLAYMASTER_DB}'
      MONGODB_REPLICA_SET_NAME: '${MONGODB_REPLICA_SET_NAME}'
      MONGODB_REPLICA_SET_MEMBERS: '${MONGODB_REPLICA_SET_MEMBERS}'
      PLAY_SUBNET_PREFIX: '192.170.0.'
      PORT: '${GAME_PORT}'
    networks:
      - default
      - play_network
    depends_on:
      - zookeeper
    secrets:
      - mongodb_playmaster_password
  
  game2:
    build:
      context: './game/'
      dockerfile: Dockerfile.prod
    ports:
      - "3000"
    environment:
      JWT_PUBLIC_KEY: "${AUTH_PUBLIC}"
      MONGODB_USER: '${MONGODB_PLAYMASTER_USER}'
      MONGODB_DATABASE: '${MONGODB_PLAYMASTER_DB}'
      MONGODB_REPLICA_SET_NAME: '${MONGODB_REPLICA_SET_NAME}'
      MONGODB_REPLICA_SET_MEMBERS: '${MONGODB_REPLICA_SET_MEMBERS}'
      PLAY_SUBNET_PREFIX: '192.170.0.'
      PORT: '${GAME_PORT}'
    ports:
      - "3000"
    networks:
      - default
      - play_network
    depends_on:
      - zookeeper
    secrets:
      - mongodb_playmaster_password

  web:
    build:
      context: './web/'
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
    depends_on:
      - auth
      - api
      - game
      - game2
    networks:
      - default
      - play_network

secrets:
  mysql_password:
    file: ./secrets/mysql_password
  mysql_root_password:
    file: ./secrets/mysql_root_password
  mongodb_api_password:
    file: ./secrets/mongodb_api_password
  mongodb_config:
    file: ./secrets/mongodb_config
  mongodb_playmaster_password:
    file: ./secrets/mongodb_playmaster_password

networks:
  default:
  play_network:
    ipam:
      driver: default
      config:
        - subnet: 192.170.0.0/16
volumes:
  auth-data:
  master-data: